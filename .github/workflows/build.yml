name: Free Bills Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test
          gradle-home-cache-cleanup: true

  tests:
    needs: build
    name: tests and sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: running tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          gradle-home-cache-cleanup: true

      - name: Create JaCoCo Report
        run: ./gradlew jacocotestReport

      - name: Build with Gradle
        run: ./gradlew compileJava

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2.0.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_KEY }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_KEY }}

  deployment:
    needs: tests
    name: Docker and deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Build to docker
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
          gradle-home-cache-cleanup: true

      - name: Bump version and push tag
        id: tagging
        uses: mathieudutour/github-tag-action@v4.5
        with:
          github_token: ${{ secrets.GIT_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tagging.outputs.new_tag }}
          name: Release ${{ steps.tagging.outputs.new_tag }}
          body: ${{ steps.tagging.outputs.changelog }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: warleyvods/freebills-api:${{ steps.tagging.outputs.new_version }}
          platforms: linux/amd64,linux/arm64

      - name: Deploy Kubernetes
        uses: steebchen/kubectl@v2.1.1
        with:
          config: ${{ secrets.KUBE_CONFIG }}
          command: set image deployment/freebills-api freebills-api=warleyvods/freebills-api:${{ steps.tagging.outputs.new_version }}

      - name: Discord Notification
        uses: sarisia/actions-status-discord@v1.9.0
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "Backend Free Bills"
          description: "Build and Deploy to Server"
          username: GitHub Actions
