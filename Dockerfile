# üìù PT-BR
# Dockerfile para Aplica√ß√£o Java usando Build em M√∫ltiplos Est√°gios
#
# Este Dockerfile foi projetado para construir e executar uma aplica√ß√£o Java usando um processo de build em m√∫ltiplos est√°gios.
# O build em m√∫ltiplos est√°gios ajuda a criar uma imagem Docker final menor e mais segura, separando o ambiente de build do ambiente de execu√ß√£o.
#
# Est√°gios:
# 1. Est√°gio de Constru√ß√£o: Usa o JDK para compilar e construir a aplica√ß√£o Java.
# 2. Est√°gio Final: Usa o JRE para executar a aplica√ß√£o compilada.
#
# Benef√≠cios:
#
# Tamanho de Imagem Reduzido: A imagem final √© m√≠nima, pois inclui apenas o JRE e o JAR da aplica√ß√£o.
# Seguran√ßa Aprimorada: Ao excluir ferramentas de build e arquivos desnecess√°rios, a superf√≠cie de ataque da imagem √© reduzida.
# Implanta√ß√£o Mais R√°pida: Tamanhos de imagem menores levam a tempos de download mais r√°pidos e inicializa√ß√£o mais r√°pida, melhorando a efici√™ncia geral da implanta√ß√£o.
# Ambiente de Execu√ß√£o Otimizado: Usar o JRE em vez do JDK completo no est√°gio final fornece um ambiente de execu√ß√£o mais leve.

# üìù EN
# Dockerfile for Java Application using Multi-stage Build
#
# This Dockerfile is designed to build and run a Java application using a multi-stage build process.
# The multi-stage build helps in creating a smaller and more secure final Docker image by separating
# The build environment from the runtime environment.
#
# Stages:
# 1. Builder Stage: Uses JDK to compile and build the Java application.
# 2. Final Stage: Uses JRE to run the compiled application.
#
# Benefits:
#
# Reduced Image Size: The final image is minimal since it only includes the JRE and the application JAR.
# Improved Security: By excluding build tools and unnecessary files, the attack surface of the image is reduced.
# Faster Deployment: Smaller image sizes lead to quicker pull times and faster startup, improving overall deployment efficiency.
# Optimized Runtime: Using JRE instead of full JDK in the final stage provides a more lightweight runtime environment.

FROM eclipse-temurin:21-jdk-alpine AS builder
WORKDIR /app
COPY . .
RUN ./gradlew build -x test

FROM eclipse-temurin:21-jre-alpine
WORKDIR /app

ENV DATABASE_CONNECTION_URL=""
ENV SCOPE="prod"
ENV PASSWORD=""
ENV USER=""

COPY --from=builder /app/build/libs/freebills.jar ./app.jar
EXPOSE 9000
ENTRYPOINT ["java", "-jar", "app.jar"]